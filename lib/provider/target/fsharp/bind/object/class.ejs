namespace {{= namespace }}

open Newtonsoft.Json
open Newtonsoft.Json.Converters
open System.Runtime.Serialization
{{ if ($subType === 'enumeration') {}}{{ include enum }}{{ } else { }}
[<DataContract>]
[<AllowNullLiteral>]
type {{= name }}() =
{{ for(var prop in properties) {
        var $nschemaType = properties[prop].type;
        var $registeredType = $nschema.getObject($nschemaType.namespace || namespace || '', $nschemaType.name);
}}  /// <summary>{{- properties[prop].description || '' }}</summary>
  {{ if ($registeredType && $registeredType.$subType === 'enumeration') { }}[<JsonConverter(typeof<StringEnumConverter>)>]
  {{ } }}[<DataMember>][<JsonProperty("{{- prop }}")>] member val {{- $nschema.utils.initialCaps(prop) }}: {{ include ../typeName }} = {{ include ../typeDefaultValue }} with get, set
{{ } }}{{ } }}